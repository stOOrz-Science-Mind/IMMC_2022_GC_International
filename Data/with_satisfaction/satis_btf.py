import matplotlib.pyplot as plt
import numpy as np
import math

PASSENGER_NUM = 189

queueing_time = [0, 5.666666666666665, 0, 12.333333333333337, 18.000000000000004, 18.000000000000004, 26.66666666666664,
                 32.333333333333286, 37.99999999999999, 43.6666666666667, 37.99999999999999, 54.33333333333344,
                 60.00000000000015, 65.66666666666681, 60.00000000000015, 66.6666666666668, 74.00000000000003,
                 79.66666666666661, 85.3333333333332, 85.3333333333332, 96.66666666666637, 96.66666666666637,
                 105.66666666666625, 105.66666666666625, 96.66666666666637, 114.66666666666612, 114.66666666666612,
                 128.3333333333326, 117.66666666666607, 117.66666666666607, 141.66666666666632, 141.66666666666632,
                 141.66666666666632, 156.3333333333334, 156.3333333333334, 167.66666666666706, 162.00000000000023,
                 175.0000000000006, 175.0000000000006, 186.33333333333425, 180.66666666666742, 180.66666666666742,
                 194.00000000000114, 192.00000000000108, 194.00000000000114, 218.6666666666685, 205.66666666666814,
                 207.33333333333485, 223.3333333333353, 212.00000000000165, 232.33333333333556, 224.66666666666868,
                 212.00000000000165, 221.6666666666686, 235.666666666669, 221.6666666666686, 241.00000000000247,
                 254.33333333333618, 259.33333333333604, 265.666666666669, 257.00000000000284, 268.66666666666885,
                 280.66666666666816, 280.66666666666816, 292.33333333333417, 286.6666666666678, 265.0000000000024,
                 277.333333333335, 277.333333333335, 300.3333333333337, 285.6666666666679, 309.99999999999983,
                 319.33333333333263, 309.99999999999983, 328.66666666666544, 334.3333333333318, 334.3333333333318,
                 345.66666666666447, 351.3333333333308, 345.66666666666447, 362.6666666666635, 362.6666666666635,
                 362.6666666666635, 375.66666666666276, 375.66666666666276, 384.66666666666225, 375.66666666666276,
                 390.9999999999952, 385.3333333333289, 385.3333333333289, 399.9999999999947, 399.9999999999947,
                 399.9999999999947, 399.9999999999947, 414.99999999999386, 420.6666666666602, 420.6666666666602,
                 431.9999999999929, 437.66666666665924, 437.66666666665924, 437.66666666665924, 437.66666666665924,
                 437.66666666665924, 453.99999999999164, 453.99999999999164, 459.666666666658, 470.9999999999907,
                 476.666666666657, 465.33333333332433, 487.3333333333231, 481.66666666665674, 492.9999999999894,
                 504.3333333333221, 498.6666666666558, 509.99999999998846, 498.6666666666558, 513.6666666666551,
                 524.333333333323, 529.9999999999903, 529.9999999999903, 524.333333333323, 539.9999999999915,
                 539.9999999999915, 551.3333333333261, 545.6666666666588, 558.6666666666603, 513.6666666666551,
                 527.6666666666567, 553.9999999999931, 542.3333333333251, 562.3333333333273, 580.9999999999961,
                 590.9999999999973, 575.3333333333288, 596.999999999998, 602.6666666666653, 602.6666666666653,
                 608.666666666666, 614.3333333333333, 608.666666666666, 622.3333333333342, 628.0000000000015,
                 622.3333333333342, 636.6666666666691, 642.3333333333364, 642.3333333333364, 650.000000000004,
                 636.6666666666691, 654.0000000000044, 665.333333333339, 671.0000000000064, 665.333333333339,
                 665.333333333339, 680.6666666666741, 675.0000000000068, 687.3333333333416, 680.6666666666741,
                 687.3333333333416, 691.333333333342, 680.6666666666741, 707.6666666666772, 707.6666666666772,
                 719.0000000000118, 719.0000000000118, 719.0000000000118, 707.6666666666772, 735.0000000000136,
                 740.666666666681, 746.3333333333483, 746.3333333333483, 746.3333333333483, 740.666666666681,
                 759.0000000000164, 753.3333333333491, 753.3333333333491, 770.6666666666844, 765.000000000017,
                 765.000000000017, 778.0000000000185, 789.3333333333532, 795.0000000000205, 789.3333333333532,
                 801.0000000000211, 783.6666666666858, 789.3333333333532, 812.3333333333558, 801.0000000000211,
                 812.3333333333558, 820.0000000000233]
sorted_queueing_time = np.sort(queueing_time)
offering_seat_time = [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 3, 0, 2, 2, 0, 0, 3, 0, 2, 3, 3,
                      3, 0, 0, 0, 3, 0, 3, 0, 3, 2, 0, 3, 0, 3, 0, 3, 0, 3, 0, 0, 0, 0, 3, 3, 2, 3, 3, 3, 0, 3, 0, 0, 0,
                      0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 3, 0, 0, 0, 0, 2, 0, 2, 0, 0, 3, 0, 0, 3, 0, 3, 3, 3, 0, 3, 0, 0, 0,
                      3, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 3, 0, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 0, 0,
                      0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 2, 0, 3, 2, 0, 0, 3, 2, 0, 0, 3, 3, 0, 0,
                      2, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 0, 0, 3, 0]
sorted_offering_seat_time = np.sort(offering_seat_time)
variation_within_rows = [17.00588133558505, 17.31357848626332, 9.728309205612248, 16.716458955173493, 20.60679499582601,
                         13.099618315050252, 12.41933975700802, 13.602940858505562, 17.85049018934774, 18.0288657435791,
                         13.023056476879765, 8.754427451295715, 22.85957129956728, 6.468384651518491,
                         14.729562111617577, 14.546477236774544, 16.029971927611104, 16.31686244349691,
                         20.14547095503106, 15.011995203836166, 24.284974778656863, 16.84755175092215, 19.0934543757802,
                         16.29232948353304, 16.769019053003667, 20.228692493584454, 17.10438540258024,
                         17.476841819962782, 16.267759526130202, 17.064583206161235, 17.944358444926362,
                         14.019985734657507, 18.650469162999627, 17.6, 18.723247581549522, 16.112107248898266,
                         16.883127672324225, 15.932357013323546, 17.3735431043872, 15.47384890710776, 19.20833152566875,
                         16.31686244349691, 24.82257037456033, 15.52546295606028, 9.346657156438337, 17.00588133558505,
                         16.678129391511508, 19.468949637820735, 15.239422561238992, 15.388307249337076,
                         15.011995203836166, 12.66491215919005, 13.514436725220923, 14.119490075778232,
                         18.36736235827017, 10.75174404457249, 15.929846201391904, 18.778711350888802,
                         13.365627557282899, 21.850400453996258, 14.53272169966796, 18.128430709799456,
                         16.7642476717567, 17.71327186038762, 20.254382241875458, 15.874507866387544,
                         16.280049139974977, 19.955951493226276, 7.9498427657407165, 16.98940846527624,
                         20.05592181875468, 20.979990467109367, 9.00222194794152, 17.33666634621547, 20.92271492899523,
                         21.78072542409917, 21.275337835155522, 18.93145530591877, 12.765578717786358,
                         18.708286933869708, 7.884161337770808, 19.5386795869117, 19.189580506097574, 21.05231578710523,
                         21.19811312357777, 14.947909552843834, 22.32129028528593, 10.244998779892558,
                         14.11382301150188, 19.849433241279208, 11.617228585166085, 11.271202242884296,
                         14.260434775980709, 14.25482374496437, 16.358484037342826, 20.075856146127368,
                         16.460862674841803, 22.922478051031046, 12.13260071048248, 12.172099243762352,
                         19.693653800145874, 16.680527569594435, 13.422369388450015, 12.563439019631527,
                         16.601204775557708, 12.416118556135006, 16.240689640529432, 11.77115117564973,
                         21.288494545176274, 15.882065356873456, 11.271202242884296, 11.47170431975999,
                         11.232096865679177, 20.474374227311564, 15.349267083479914, 18.94835085172322,
                         16.523922052587878, 19.24162155328911, 18.906083676954356, 14.057026712644463,
                         15.011995203836165, 6.916646586316234, 16.277591959500644, 11.889491158161478,
                         17.38275007011261, 11.48216007552586, 7.227724399837061, 9.911609354691095, 14.513442045221389,
                         20.855694665965938, 16.72841893306119, 17.533967035442952, 17.738094598913378,
                         22.150395030337496, 15.992498241363045, 10.55651457631732, 14.961283367412035,
                         16.48757107641996, 14.091131963046829, 15.582040944625964, 18.840382161729096,
                         18.916659324521333, 20.376457003120045, 16.166632302368974, 8.867919710958144,
                         9.478396488858229, 17.151093259614676, 9.0, 16.54569430395715, 10.44222198576529,
                         10.61319932913728, 21.71082679217906, 25.499803920814763, 18.8403821617291, 11.876026271442818,
                         17.962182495454165, 15.409088227406578, 16.304600577751057, 15.236797563792727, 15.0,
                         12.467557900406959, 10.979981785048643, 10.881176406988354, 12.496399481450648,
                         14.310835055998654, 21.397196077991154, 13.850631754544628, 13.965672200076874,
                         13.602940858505562, 18.87432117984644, 21.4997674406027, 21.341040274550817, 11.50651989091402,
                         25.00079998720041, 21.160340261914506, 6.829348431585549, 20.575713839378697, 6.0,
                         18.1151869987588, 9.32952303175248, 17.79438113562818, 7.391887445030532, 7.914543574963752,
                         19.969977466186585, 19.772708463940898, 16.71645895517349, 22.435685859808252,
                         22.150395030337496, 17.13942822850284]
sorted_variation_within_rows = np.sort(variation_within_rows)

datax = range(0, 189)
# plt.rc('text', usetex=True)
# plt.rc('font', family='serif')
plt.figure(figsize=(6, 6), dpi=80)

K1 = 1
K2 = 250
K3 = 10

new_offering_seat_time = [K2 * i for i in offering_seat_time]
new_variation_within_rows = [K3 * i for i in variation_within_rows]

dissatisfaction = [K1 * queueing_time[i] + K2 * offering_seat_time[i] + K3 * variation_within_rows[i] for i in
                   range(PASSENGER_NUM)]
sorted_dissatisfaction = np.sort(dissatisfaction)

# plt.plot(datax, K1 * queueing_time)
# plt.plot(datax, sorted_queueing_time)
# plt.plot(datax, new_offering_seat_time)
# plt.plot(datax, sorted_offering_seat_time)
# plt.plot(datax, new_variation_within_rows)
# plt.plot(datax, sorted_variation_within_rows)

plt.plot(datax, dissatisfaction)
plt.plot(datax, sorted_dissatisfaction)

plt.title(r'$\alpha_{\mathrm{satisfy}}$ in back-to-front boarding')
# plt.legend(['queuing', 'offering seat', 'variation', 'dissatisfaction', 'dissatisfaction_sorted'], loc=2)
plt.legend([r'$\alpha_{\mathrm{satisfy}}$', r'$\alpha_{\mathrm{satisfy}}$ sorted'], loc=2)
plt.xlabel('Passenger Sequence')
# plt.legend(['standard_variation_time (sorted)'], loc=2)


plt.show()

print(np.average(dissatisfaction))
