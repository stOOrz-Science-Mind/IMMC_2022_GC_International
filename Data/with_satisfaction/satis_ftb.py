import matplotlib.pyplot as plt
import numpy as np
import math

PASSENGER_NUM = 189

queueing_time = [0, 0, 0, 7.33333333333333, 13.000000000000005, 18.666666666666668, 24.333333333333314,
                 24.333333333333314, 24.333333333333314, 31.66666666666662, 37.33333333333332, 43.00000000000003,
                 48.666666666666735, 54.33333333333344, 60.00000000000015, 54.33333333333344, 68.33333333333344,
                 74.00000000000003, 79.66666666666661, 85.3333333333332, 79.66666666666661, 95.33333333333306,
                 95.33333333333306, 102.33333333333296, 107.99999999999955, 107.99999999999955, 115.33333333333277,
                 115.33333333333277, 121.33333333333269, 121.33333333333269, 121.33333333333269, 131.66666666666603,
                 137.33333333333286, 142.9999999999997, 148.66666666666652, 148.66666666666652, 142.9999999999997,
                 158.6666666666668, 164.33333333333363, 170.00000000000045, 175.66666666666728, 164.33333333333363,
                 180.66666666666742, 190.33333333333437, 196.0000000000012, 180.66666666666742, 197.6666666666679,
                 203.33333333333474, 213.00000000000168, 213.00000000000168, 218.6666666666685, 228.33333333333545,
                 234.00000000000227, 234.00000000000227, 239.6666666666691, 251.00000000000276, 256.6666666666695,
                 262.3333333333359, 262.3333333333359, 262.3333333333359, 278.00000000000165, 278.00000000000165,
                 289.33333333333434, 295.0000000000007, 300.666666666667, 311.9999999999997, 300.666666666667,
                 317.66666666666606, 323.3333333333324, 323.3333333333324, 331.33333333333195, 336.9999999999983,
                 342.66666666666464, 348.333333333331, 353.9999999999973, 348.333333333331, 353.9999999999973,
                 359.6666666666637, 365.33333333333, 365.33333333333, 370.99999999999636, 378.6666666666626,
                 378.6666666666626, 389.9999999999953, 384.33333333332894, 399.3333333333281, 401.33333333332797,
                 406.9999999999943, 401.33333333332797, 412.66666666666066, 421.33333333332683, 432.6666666666595,
                 438.33333333332587, 443.9999999999922, 449.66666666665856, 438.33333333332587, 438.33333333332587,
                 461.6666666666579, 467.3333333333242, 484.33333333332325, 472.33333333332394, 472.99999999999056,
                 472.99999999999056, 489.9999999999896, 489.33333333332297, 501.6666666666556, 507.9999999999886,
                 496.6666666666559, 519.3333333333225, 524.9999999999898, 519.3333333333225, 524.9999999999898,
                 525.6666666666565, 542.6666666666584, 541.9999999999917, 543.9999999999919, 544.6666666666587,
                 559.6666666666604, 565.3333333333277, 576.6666666666623, 570.999999999995, 578.6666666666625,
                 578.6666666666625, 589.3333333333304, 594.9999999999977, 604.9999999999989, 611.9999999999997,
                 611.9999999999997, 622.0000000000008, 606.3333333333323, 622.3333333333342, 628.0000000000015,
                 633.6666666666688, 645.0000000000034, 628.0000000000015, 646.6666666666703, 651.6666666666708,
                 650.6666666666707, 650.6666666666707, 650.6666666666707, 645.0000000000034, 657.3333333333381,
                 651.0000000000041, 662.6666666666721, 674.0000000000067, 668.3333333333394, 685.000000000008,
                 685.3333333333413, 695.0000000000091, 685.3333333333413, 701.3333333333431, 712.6666666666778,
                 712.6666666666778, 707.3333333333438, 719.3333333333452, 709.0000000000107, 725.6666666666792,
                 732.3333333333467, 738.000000000014, 748.6666666666819, 743.6666666666813, 755.0000000000159,
                 755.0000000000159, 766.3333333333505, 769.6666666666843, 781.0000000000189, 781.0000000000189,
                 794.3333333333537, 777.6666666666852, 772.0000000000178, 789.0000000000198, 789.0000000000198,
                 800.6666666666878, 812.0000000000224, 801.0000000000211, 818.0000000000231, 806.3333333333551,
                 822.0000000000235, 828.0000000000242, 830.0000000000244, 811.3333333333557, 840.6666666666923,
                 848.3333333333599, 848.0000000000265, 861.3333333333613, 853.6666666666938, 870.6666666666957,
                 870.3333333333624, 887.6666666666977]
sorted_queueing_time = np.sort(queueing_time)
offering_seat_time = [0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 3, 0, 2, 2, 3, 3, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 3,
                      0, 0, 3, 0, 0, 3, 0, 0, 3, 0, 0, 3, 3, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 3, 3, 3, 3, 0, 0, 0,
                      0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 2, 0, 3, 0,
                      0, 3, 3, 0, 0, 0, 0, 3, 0, 0, 2, 0, 2, 3, 3, 2, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0,
                      0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 3, 0, 3, 3, 3, 3, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0,
                      2, 3, 0, 3, 0, 3, 0, 2, 3, 0, 2, 2, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 3, 0]
sorted_offering_seat_time = np.sort(offering_seat_time)
variation_within_rows = [14.25482374496437, 5.238320341483518, 2.5, 5.6000000000000005, 8.822698000045111,
                         9.130169768410662, 15.486768546084752, 9.23038460737146, 14.513442045221389,
                         16.228370220080635, 16.438978070427613, 16.98705389406886, 12.026637102698327,
                         14.837789592793126, 10.55651457631732, 9.0, 15.564061166674977, 17.624982269494627,
                         10.55651457631732, 16.1245154965971, 6.5, 17.769637024992942, 20.025983121934363,
                         14.634206503941373, 9.850888284819803, 14.851262572589578, 14.934523762075576,
                         10.788883167408942, 14.469277798148738, 17.405746177627663, 11.859173664298876,
                         7.64198926981712, 17.325126262166172, 14.455448799674121, 14.402777509911065,
                         16.78570820668583, 18.467268341582084, 19.00526242912736, 16.3707055437449, 16.3707055437449,
                         13.720058308913996, 18.380424369420854, 19.110206696946005, 19.0934543757802,
                         12.877888025604198, 14.037093716293269, 17.962182495454165, 12.815615474880635,
                         13.2664991614216, 17.543089807670714, 17.3735431043872, 11.359577456930342, 9.748846085563152,
                         22.08710030764564, 13.380582946942186, 13.215142829345433, 21.720036832381293,
                         10.537551897855593, 17.2441294358399, 21.2452347598232, 16.74037036627326, 11.754148203932091,
                         20.655265672462313, 18.49324200890693, 12.796874618437112, 15.200000000000001,
                         16.117071694324622, 19.610201426808445, 16.859418732566077, 6.356099432828281,
                         14.51895313030523, 7.964923100695952, 16.625281952496323, 8.508818954473059,
                         17.118411141224527, 15.388307249337076, 14.601369798755183, 9.19565114605812,
                         14.324803663575986, 21.590738755308955, 19.734234213670415, 15.974980438172686,
                         9.431860898041277, 15.658863304850707, 18.639742487491613, 18.714700104463336,
                         16.230834852218784, 17.02233826476257, 21.95449840010015, 10.170545708072895,
                         15.582040944625964, 20.903588208726273, 7.858753081755401, 7.5099933422074345,
                         11.42978564978364, 20.972362766269327, 16.280049139974977, 20.57765778702717,
                         14.207040508142432, 12.076423311560422, 12.142487389328432, 20.272148381461694,
                         16.353592877407703, 12.674383614203888, 17.141761869772896, 16.692513291892265,
                         16.88786546606764, 16.007498243010993, 19.252012881774206, 16.53602128687551,
                         18.895502110290693, 15.730225681788548, 15.265647709809107, 15.065191668213185,
                         10.9288608738514, 17.515707236649053, 16.81190054693401, 17.84376641855637, 13.16662447250623,
                         17.2, 12.97073629367277, 8.37615663654877, 12.12270596855339, 13.614697940094006,
                         10.870142593360953, 16.04244370412438, 15.663971399361019, 15.001333274079341,
                         20.684293558156632, 21.027600909281116, 9.046546302318912, 12.781236246936365,
                         16.572265988693278, 16.668533228811704, 18.0, 16.816658407662327, 16.868906307167638,
                         13.570556362949898, 19.06200409191017, 15.07846145997661, 15.192103211866355,
                         15.014659503298768, 22.041778512633684, 13.362634470792052, 20.199009876724155,
                         12.026637102698327, 16.32666530556684, 16.419500601419035, 13.196969349058895,
                         17.4928556845359, 17.440183485273312, 14.062716664997556, 15.317963311093287,
                         16.666133324799727, 10.248902380255165, 25.41653005427767, 16.823792675850473,
                         14.691494137765567, 13.76081392941566, 16.3902409988383, 13.514436725220923,
                         24.021656895393374, 20.934182573007238, 17.75387281693772, 12.626955294131678,
                         12.737346662472527, 17.590906741836818, 12.89961239727768, 11.499565209172042,
                         13.341664064126334, 10.96540012949824, 24.701416963405155, 23.465719677862, 3.49857113690718,
                         15.78100123566309, 15.666524822052914, 18.821264569629747, 15.85433694608513,
                         15.223665787188052, 15.315351775261318, 23.15167380558045, 9.346657156438338,
                         14.38054240979804, 21.590738755308955, 11.146299834474219, 15.829087149927503,
                         20.8096131631513, 21.247117451550928, 9.703607576566563]
sorted_variation_within_rows = np.sort(variation_within_rows)

datax = range(0, 189)
# plt.rc('text', usetex=True)
# plt.rc('font', family='serif')
plt.figure(figsize=(6, 6), dpi=80)

K1 = 1.2
K2 = 250
K3 = 10

new_offering_seat_time = [K2 * i for i in offering_seat_time]
new_variation_within_rows = [K3 * i for i in variation_within_rows]

dissatisfaction = [K1 * queueing_time[i] + K2 * offering_seat_time[i] + K3 * variation_within_rows[i] for i in
                   range(PASSENGER_NUM)]
sorted_dissatisfaction = np.sort(dissatisfaction)

# plt.plot(datax, K1 * queueing_time)
# plt.plot(datax, sorted_queueing_time)
# plt.plot(datax, new_offering_seat_time)
# plt.plot(datax, sorted_offering_seat_time)
# plt.plot(datax, new_variation_within_rows)
# plt.plot(datax, sorted_variation_within_rows)

plt.plot(datax, dissatisfaction)
plt.plot(datax, sorted_dissatisfaction)

plt.title(r'$\alpha_{\mathrm{satisfy}}$ in front-to-back boarding')
# plt.legend(['queuing', 'offering seat', 'variation', 'dissatisfaction', 'dissatisfaction_sorted'], loc=2)
plt.legend([r'$\alpha_{\mathrm{satisfy}}$', r'$\alpha_{\mathrm{satisfy}}$ sorted'], loc=2)
plt.xlabel('Passenger Sequence')
# plt.legend(['standard_variation_time (sorted)'], loc=2)


plt.show()

print(np.average(dissatisfaction))
